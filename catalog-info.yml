---
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-user
apiVersion: backstage.io/v1alpha1
kind: User
metadata:
  name: guest
spec:
  memberOf: [guests]
---
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-group
apiVersion: backstage.io/v1alpha1
kind: Group
metadata:
  name: guests
spec:
  type: team
  children: []
---
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-system
apiVersion: backstage.io/v1alpha1
kind: System
metadata:
  name: examples
spec:
  owner: guests
---
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-component
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: example-website
spec:
  type: website
  lifecycle: experimental
  owner: guests
  system: examples
  providesApis: [example-grpc-api]
---
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-api
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: example-grpc-api
spec:
  type: grpc
  lifecycle: experimental
  owner: guests
  system: examples
  definition: |
    syntax = "proto3";

    service Exampler {
      rpc Example (ExampleMessage) returns (ExampleMessage) {};
    }

    message ExampleMessage {
      string example = 1;
    };
---
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  namespace: default
  annotations:
    backstage.io/managed-by-location: url:https://github.com/oliverdirks/mkdocs-example/tree/main/catalog-info.yml
    backstage.io/managed-by-origin-location: url:https://github.com/oliverdirks/mkdocs-example/blob/main/catalog-info.yml
    backstage.io/view-url: https://github.com/oliverdirks/mkdocs-example/tree/main/catalog-info.yml
    backstage.io/edit-url: https://github.com/oliverdirks/mkdocs-example/edit/main/catalog-info.yml
    backstage.io/source-location: url:https://github.com/oliverdirks/mkdocs-example/tree/main/
    backstage.io/techdocs-ref: dir:.
  name: mkdocs-example
  description: example mkdocs repository
spec:
  type: website
  owner: guests
  lifecycle: experimental
